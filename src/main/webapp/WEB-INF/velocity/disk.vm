#set($layout ="layout/layout_easyui.vm" )
#set($title="我的网盘")
<script src="${rc.contextPath}/static/js/spark-md5.js" type="text/javascript"></script>

##新建文件夹START
<div id="win" class="easyui-window" title="新建文件夹" style="width:600px;height:200px;"
            data-options="iconCls:'icon-save',modal:true">
	<div style="padding:10px 60px 20px 60px">
        <form id="ff" action="${rc.contextPath}/user/mkdir" method="post">
            <table cellpadding="5">
                <tr>
                    <td>名称:</td>
                    <td><input class="easyui-textbox" type="text" name="dir" data-options="required:true"></input></td>
                </tr>
                <tr>
                    <td>路径:</td>
                    <td>
						<input class="easyui-combotree" id="treeid" value=""
							name="pid" data-options="url:'${rc.contextPath}/user/filetree?isdir=0',method:'get'" style="width:200px;"></input>
							留空为根目录
					</td>
                </tr>
                
            </table>
        </form>
        <div style="text-align:center;padding:5px">
            <a href="javascript:void(0)" class="easyui-linkbutton" onclick="submitForm()">Submit</a>
            <a href="javascript:void(0)" class="easyui-linkbutton" onclick="clearForm()">Clear</a>
        </div>
    </div>
    <script>
        function submitForm(){
             $('#ff').form('submit');
			 $('#win').window('close');//关闭窗口
			 $('#tg').treegrid('reload');//刷新
			 //AJAX提交的时候可以使用
    		 //var node = $('#tg').treegrid('getSelected');
    			
    		// $('#tg').treegrid('reload', node.id);//刷新节点
			
			
        }
        function clearForm(){
            $('#ff').form('clear');
        }
    </script>
	
 </div>
##新建文件夹END
##上传START
<div id="winUpload" class="easyui-window" title="上传" style="width:600px;height:200px"
        data-options="iconCls:'icon-save',modal:true">
    	<div style="padding:10px 60px 20px 60px">
        <form id="ff2"  method="post" enctype="multipart/form-data">
            <input type="hidden" name="md5" id="md5" value=""/>
			<table cellpadding="5">
                <tr>
                    <td>选择:</td>
                    <td><input type="file" name="file" id="file"  style="width:90%"></td>
                </tr>
                <tr>
                    <td>路径:</td>
                    <td>
						<input class="easyui-combotree" id="treeid2" value=""
							name="pid" data-options="url:'${rc.contextPath}/user/filetree?isdir=0',method:'get'" style="width:200px;">
						</input>
						留空为根目录
					</td>
                </tr>
                
            </table>
        </form>
        <div style="text-align:center;padding:5px">
			<input type="button" id="incremental" value="Submit" class="btn primary"/>
        </div>
		
		 <div id="log"></div>
    </div>
</div>

##上传END

   
    <table id="tg" class="easyui-treegrid" title="我的网盘" style="width:100%;height:600px"
            data-options="
                iconCls: 'icon-ok',
                rownumbers: true,
                animate: true,
                collapsible: true,
                fitColumns: true,
                url: '${rc.contextPath}/user/filetree',
                method: 'get',
                idField: 'id',
                treeField: 'text',
                onContextMenu: onContextMenu,
				tools:'#tt'
            ">
        <thead>
            <tr>
                <th data-options="field:'text',width:180">文件名称</th>
                <th data-options="field:'fsize',width:60,align:'right'">文件大小</th>
                <th data-options="field:'addtime',width:80 ,formatter:formatDate">上传日期</th>
                
            </tr>
        </thead>
    </table>
    <div id="mm" class="easyui-menu" style="width:120px;">
		
		<div onclick="mkdir()">新建文件夹</div>
		<div onclick="removeIt()" data-options="iconCls:'icon-remove'">删除</div>
		<div onclick="append()" data-options="iconCls:'icon-add'">上传</div>
		<div onclick="download()">下载</div>
        <div class="menu-sep"></div>
        <div onclick="collapse()">收起节点</div>
        <div onclick="expand()">展开节点</div>
		<div class="menu-sep"></div>
        
    </div>

	<div id="tt">
		<a href="javascript:void(0)" class="tree-icon tree-folder easyui-tooltip" title="新建文件夹" onclick="javascript:mkdir()"></a>
        <a href="javascript:void(0)" class="icon-add easyui-tooltip" title="上传文件" onclick="javascript:append()"></a>
        <a href="javascript:void(0)" class="icon-edit easyui-tooltip" title="编辑" onclick="javascript:alert('edit')"></a>
        <a href="javascript:void(0)" class="icon-cut easyui-tooltip" title="剪切" onclick="javascript:alert('cut')"></a>
        <a href="javascript:void(0)" class="icon-help easyui-tooltip" title="帮助" onclick="javascript:alert('help')"></a>
    </div>
	
    <script type="text/javascript">
	
	$(function(){
		$('#win').window('close');
		$('#winUpload').window('close');
		
	});
	
	Date.prototype.format = function(format){
      var o = {
        "M+" : this.getMonth()+1,
        "d+" : this.getDate(),
        "h+" : this.getHours(),
        "m+" : this.getMinutes(),
        "s+" : this.getSeconds(),
        "q+" : Math.floor((this.getMonth()+3)/3),
        "S" : this.getMilliseconds()
      }
      
      if(/(y+)/.test(format)) {
      	format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
      }
      
      for(var k in o) {
        if(new RegExp("("+ k +")").test(format)) {
        	format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
        }
      }
      return format;
    }

        function formatDate(value){
            if (value){
               // return new Date(value);
				sd = parseInt(value);
  				return new Date(sd).format("yyyy/MM/dd hh:mm:ss");
            } else {
                return '';
            }
    	}
		
		function download(){
			var node = $('#tg').treegrid('getSelected');
			if (node){
				$.ajax({
                  url: "${rc.contextPath}/user/download",
                  data: {fid:node.id},
                  success: function(data){
				  
                    	if(data.status == 0){
							$.messager.show({
                                title:'下载成功',
                                msg:'下载成功\r\n下载目录为'+data.path,
                                showType:'show'
                        	});
						
						}else{
							$.messager.show({
                            	title:'下载失败',
                            	msg:'下载失败',
                            	showType:'show'
                        	});
						}
						
                  }
                });
            }
		}
		function mkdir(){
			//得到树当前节点
			
			 var node = $('#tg').treegrid('getSelected');
			
			if(node){
				//设置选中节点
				$('#treeid').combotree('setValue', node.id);
			}
			
            $('#win').window({
                width:600,
                height:200,
                modal:true
            });
        }
				
        function onContextMenu(e,row){
            e.preventDefault();
            $(this).treegrid('select', row.id);
            $('#mm').menu('show',{
                left: e.pageX,
                top: e.pageY
            });
        }
        var idIndex = 100;
        function append(){
			$('#winUpload').window('open');
			 var node = $('#tg').treegrid('getSelected');
			
			if(node){
				//设置选中节点
				$('#treeid2').combotree('setValue', node.id);
			}
			
           
        }
        function removeIt(){
			$.messager.confirm('Confirm','确定删除吗',function(r){
                if (r){
					var node = $('#tg').treegrid('getSelected');
                    if (node){
						$.ajax({
                          url: "/user/delfile",
                          data: {fid:node.id},
                          success: function(data){
						  
                            	$('#tg').treegrid('remove', node.id);
								
								$.messager.show({
                                    title:'删除成功',
                                    msg:'删除成功',
                                    showType:'show'
                                });
    							
                          }
                        });
                    }
                    
                }
            });
            
        }
		
        function collapse(){
            var node = $('#tg').treegrid('getSelected');
            if (node){
                $('#tg').treegrid('collapse', node.id);
            }
        }
        function expand(){
            var node = $('#tg').treegrid('getSelected');
            if (node){
                $('#tg').treegrid('expand', node.id);
            }
        }
    </script>

	
###upload start 
<script type="text/javascript">

            var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,
                log = document.getElementById("log"),
                input = document.getElementById("file"),
                running = false;

            function registerLog(str, className) {
                var elem = document.createElement("div");
                elem.innerHTML = str;
                elem.className = "alert-message" + (className ? " "  + className : "");
                log.appendChild(elem);
            }

            if (!("FileReader" in window) || !("File" in window) || !blobSlice) {
                //registerLog("<p><strong>Your browser does not support the FileAPI or slicing of files.</strong></p>", "error");
            }
            else {
                var ua = navigator.userAgent.toLowerCase();

                if (/chrome/.test(ua)) {
                    if (location.protocol === "file:") {
                        //registerLog("<p><strong>This example will only work in chrome (in file:// protocol) if you start it up with -allow-file-access-from-files argument.</strong><br/>This is a security measure introduced in chrome, please <a target=\"_blank\" href=\"http://code.google.com/p/chromium/issues/detail?id=60889\">see</a>.</p>");
                    }
                }
                else if (/firefox/.test(ua)) {
                    var firebugEnabled = !!(window.console && (window.console.firebug || (console.exception && console.table)));
                    if (firebugEnabled) registerLog("<p><strong>It seems you got firebug enabled.</strong><br/>Firebug slows down this script by a great margin and causes high memory/cpu usage, please disable it and use the built in web console instead.</p>");
                }
                else if (/opera/.test(ua)) {
                    //registerLog("<p><strong>If you got DragonFly open please consider closing it as it slows down the test by a great margin.</strong></p>");
                }

                function doIncrementalTest() {

                    if (running) return;
                    if (input.files.length == 0) {
                        //registerLog("<strong>Please select a file.</strong><br/>");
                        return;
                    }

                    var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,
                        file = input.files[0],
                        chunkSize = 2097152,                           // read in chunks of 2MB
                        chunks = Math.ceil(file.size / chunkSize),
                        currentChunk = 0,
                        spark = new SparkMD5.ArrayBuffer(),
                        time,
                        uniqueId = "chunk_" + (new Date().getTime()),
                        chunkId = null,

                    frOnload = function(e) {

                        if (currentChunk == 0){} //registerLog("Read chunk number <strong id=\"" + uniqueId + "\">" + (currentChunk + 1) + "</strong> of <strong>" + chunks + "</strong><br/>", "info");
                        else {
                            if (chunkId === null) chunkId = document.getElementById(uniqueId);
                            chunkId.innerHTML = currentChunk + 1;
                        }

                        spark.append(e.target.result);                 // append array buffer
                        currentChunk += 1;

                        if (currentChunk < chunks) {
                            loadNext();
                        }
                        else {
                            running = false;
                            //registerLog("<strong>Finished loadingee!</strong><br/>", "success");
                           // registerLog("<strong>Computed hash:</strong> " + spark.end() + "<br/>", "success"); // compute hash
                           // registerLog("<strong>Total time:</strong> " + (new Date().getTime() - time) + "ms<br/>", "success");
							
							$("#md5").val(spark.end());
							$('#ff2').form('submit', {
                                url:'${rc.contextPath}/user/upfile',
                                onSubmit: function(){
                                    // do some check
                                    // return false to prevent submit;
                                },
                                success:function(data){
									$('#winUpload').window('close');
									 $.messager.show({
                                        title:'上传成功',
                                        msg:'上传成功',
                                        showType:'show'
                                    });
    								$('#tg').treegrid('reload');//刷新节点
			
                                }
                            });

                        }
                    },

                   frOnerror = function() {
                        running = false;
                        //registerLog("<strong>Oops, something went wrong.</strong>", "error");
                   },

                    loadNext = function() {
                        var fileReader = new FileReader();
                        fileReader.onload = frOnload;
                        fileReader.onerror = frOnerror;

                        var start = currentChunk * chunkSize,
                            end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;

                        fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));
                    };

                    running = true;
                   // registerLog("<p></p><strong>Starting incremental test (" + file.name + ")</strong><br/>", "info");
                    time = new Date().getTime();
                    loadNext();
                }

                

                function clearLog() {
                    log.getChildren().destroy();
                }
            }

            document.getElementById("incremental").addEventListener("click", doIncrementalTest);
        </script>
###upload end